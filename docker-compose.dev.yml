services:
    api:
        build:
            context: .
            dockerfile: apps/api/Dockerfile.dev
        working_dir: /app/apps/api
        environment:
            NODE_ENV: ${NODE_ENV}
            DATABASE_URL: ${DATABASE_URL}
            CLERK_WEBHOOK_SIGNING_SECRET: ${CLERK_WEBHOOK_SIGNING_SECRET}
            GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
            GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
            GITHUB_STATE_SECRET: ${GITHUB_STATE_SECRET}
            WEB_APP_BASE_URL: ${WEB_APP_BASE_URL}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
        volumes:
            - .:/app
            - /app/node_modules
            - /app/apps/api/node_modules
        ports:
            - "${API_PORT:-8888}:8888"

    db:
        image: postgres:18-alpine
        container_name: dev-sync-postgres
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - db_data:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT:-5432}:5432"

    redis:
        image: redis:8.2.2-alpine
        container_name: redis
        ports:
            - "6379:6379"

    worker:
        build:
            context: .
            dockerfile: apps/worker/Dockerfile.dev
        depends_on:
            - redis
        environment:
            NODE_ENV: ${NODE_ENV}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
        volumes:
            - .:/app
            - /app/node_modules

volumes:
    db_data:
